''''''

<Program> ::= <Statement>*

<Statement> ::= <VarDeclaration> | <FuncDeclaration> | <Expr>

<VarDeclaration> ::= (LET | CONST) <Identifier> (EQUAL <Expr>)? SEMICOLON

<FuncDeclaration> ::= FN <Identifier> LEFT_PAREN (<Identifier> (COMMA <Identifier>)*)? RIGHT_PAREN <Block>

<Block> ::= LEFT_BRACE <Statement>* RIGHT_BRACE

<Expr> ::= <AssignmentExpr>

<AssignmentExpr> ::= <AdditiveExpr> (EQUAL <Expr>)?

<AdditiveExpr> ::= <MultiplicativeExpr> ((PLUS | MINUS | MOD) <MultiplicativeExpr>)*

<MultiplicativeExpr> ::= <CallMemberExpr> ((MULTIPLY | DIVIDE) <CallMemberExpr>)*

<CallMemberExpr> ::= <MemberExpr> | <CallExpr>

<CallExpr> ::= <Expr> LEFT_PAREN <Args>? RIGHT_PAREN

<MemberExpr> ::= <PrimaryExpr>

<PrimaryExpr> ::= <Identifier> | <NumericLiteral> | LEFT_PAREN <Expr> RIGHT_PAREN

<Args> ::= <Expr> (COMMA <Expr>)*
